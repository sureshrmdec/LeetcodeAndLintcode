2016.5.8 NY 刷题小组分享会

刷题六部走：

- 讲题目意思
- 讲输入/输出 参数，类型， 讨论清楚, 写出函数的标头
- 讲算法, 我们需要哪些操作（可以举一个具体的输入例子） -> 选数据结构:  转到下面的 java util. collections
- 代码实现
- test case :  corner cases, 普通 case
- 分析 时间/ 空间复杂度

java.util. collections:
 如何用 array 实现 arraylist

collections: 底层都是怎么实现的，增删改查时间复杂度

- list: ArrayList, Linkedlist
- set: HashSet, treeSet
- map: Hashmap, TreeMap, Hashtable, concurrentHashmap
- blocking queue

Arrays
操作：addition, removal, sorting, search, iteration, copy

排序算法：(分比较排序，非比较排序)

- insertion, bubble, selection,   O(n2)
- quicksort(空间复杂度 logn), mergesort, heapsort
- radix sort, bucketsort, counting,

hashcode() 为啥是33

java 二叉树面试题大全 -> 重中之重

常考 BST

Heap: peek(): O(1), delete O(logn)
priority queue: Min heap,  top K 问题: 两种解法

comparable, comparator 区别:
huffman code: 频率越高，程度越高

2^32 = 4G
2^16 = 65536

LCA -> 把递归的树给写出来 -> 每层的参数，每层的返回值长啥样，给画出来

bucketSort
Exception handling: illegalArgument Exception,  checked, unchecked

实现 iterator: leetcode 比如实现 BST iterator

SQL: 1. design a table ,
B tree, B+ tree 区别
table 第二个成绩好的，第三个成绩好， group by, limit
NoSQL数据库 有哪几种, 怎么实现:

面试中如何坎知识点:
http://www.bittiger.io/blog/post/djAH5QCDc6ExwE9Wz

系统：
死锁：what is deadlock
design pattern: factory pattern, singleton pattern

多线程